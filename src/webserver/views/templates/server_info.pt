<!DOCTYPE html>
<tal:block metal:use-macro="layout">
	<tal:block metal:fill-slot="head_content">
	<script src="http://ajax.googleapis.com/ajax/libs/jquery/1.4/jquery.js" type="text/javascript"></script>


	<meta http-equiv="content-type" content="text/html;charset=UTF-8" />
	<style type="text/css">
	
	/* Server big switch */
	.iCheckbox_two_container {
		height:27px;
		width:94px;
		position: relative;
		overflow: hidden;
	}
	.iCheckbox_two_switch {
		height:27px;
		width:94px;
		background-image:url(/static/iPhoneCheckbox/images/iphone_switch.png); /* your actual slider image */
		background-repeat:none;
		background-position:0px;
	}
	.iCheckbox_two_checkbox { /* this is kinda moot since it gets hidden, but here to let you know it exists */
	}
	
	/* Outlet switches */
    .iCheckbox_Outlet_container {
            height:27px;
            width:94px;
            position: relative;
            overflow: hidden;
    }
    .iCheckbox_Outlet_switch {
            height:16px;
            width:36px;
            background-image:url(/static/iPhoneCheckbox/images/bpm-lozenge.png); /* your actual slider image */
            background-repeat:none;
            background-position:0px;
    }
    .iCheckbox_Outlet_checkbox { /* this is kinda moot since it gets hidden, but here to let you know it exists */
    }
	</style>
	
	
	<script src="/static/iPhoneCheckbox/jquery.iphone-switch.js" type="text/javascript"></script>

	<script src="/static/iPhoneCheckbox/jquery.iCheckbox.js" type="text/javascript"></script>
	<script type="text/javascript">
	// mimic console log for IE - must be careful what to log
	if ( typeof(console) == 'undefined' ) {
		var console = {};
	}
	if ( typeof(console.log) !== 'function' ) {
		console['log'] = function ( msg ) {
			alert(msg);
		}
	}

	// init the checkboxes at dom ready
	var outletsDict = ${structure: outletsDict};
	$(document).ready( function () {
		/*
		* first example - defaults
		*/
		$('#checkOne').iCheckbox();
		$('#checkOne').change(function(e){
			if ( $('#checkOne').attr('checked') == true ) {
				console.log('checkbox one checked: '+$(e.target).attr('checked'));
			}
		});
		/*
		* second example - custom
		*/
		var checkTwoOpts = {
			switch_container_src: '/static/iPhoneCheckbox/images/iphone_switch_container.gif',
			class_container: 'iCheckbox_two_container',
			class_switch: 'iCheckbox_two_switch',
			class_checkbox: 'iCheckbox_two_checkbox',
			switch_speed: 200,
			switch_swing: -53,
			checkbox_hide: false
			};
		
        var checkOutletOpts = {
                switch_container_src: '/static/iPhoneCheckbox/images/bpm-frame.gif',
                class_container: 'iCheckbox_Outlet_container',
                class_switch: 'iCheckbox_Outlet_switch',
                class_checkbox: 'iCheckbox_Outlet_checkbox',
                switch_speed: 150,
                switch_swing: -18,
                checkbox_hide: false
                };

		
		var initial_state = "${server_dict['Switch']}";
		var initial_state_outlet = "${server_dict['Switch']}";
		$('#checkTwo').iCheckbox(initial_state, checkTwoOpts );
		$('#checkTwo').change(function(e){
			if ( $('#checkTwo').attr('checked') == true ) {
				console.log('checkbox two checked: '+$(e.target).attr('checked'));
			}
		});
		
		for(var outletKey in outletsDict){
			$('#status_'+ outletKey).hide();
			outletsDict[outletKey]["firstRun"] = true;
			$('#check_' + outletKey).iCheckbox(outletsDict[outletKey]["Switch"], checkOutletOpts );

			$('#check_' + outletKey).change(function(e){
			outletID = e.currentTarget.getAttribute('id');
			currentOutlet = outletID.split("_")[1];
				if (!outletsDict[currentOutlet]["firstRun"]){
				state = document.getElementById(outletID).checked;
				
				$('#status_'+ currentOutlet).show();
				switchOutlet(currentOutlet,outletID,state);
				
				}

				if (outletsDict[currentOutlet]["firstRun"]){
					outletsDict[currentOutlet]["firstRun"]=false;
				}
			});
		}
		
	});
	
	function switchOutlet(outlet,elementID,state){
		serverName = "${server_dict['Name']}";
		//alert(outlet +  state + serverName);
		if (state){
			state = "on";
		}else{
			state="off";
		}
		
		$.ajax({
	        'type': 'POST',
	        'url': "/sendOckleCommand.json",
	        'contentType': 'application/json',
	        'data': JSON.stringify({"command": "switchOutlet",
			"dataDict" : {"server": serverName,
						"outlet" : 	outletsDict[outlet]["name"],
						"state" : state
			}}),
	        'dataType': 'json',
	        'success': function(response){
	        	$('#status_'+ outlet).hide();

			}
	    });

	}
	</script>


	<link rel="stylesheet" type="text/css" href="/static/jqplot/jquery.jqplot.css" />
	<script language="javascript" type="text/javascript" src="/static/jqplot/jquery.jqplot.js"></script>
	<script language="javascript" type="text/javascript" src="/static/jqplot/plugins/jqplot.highlighter.js"></script>
	<script language="javascript" type="text/javascript" src="/static/jqplot/plugins/jqplot.cursor.js"></script>
	<script language="javascript" type="text/javascript" src="/static/jqplot/plugins/jqplot.dateAxisRenderer.js"></script>
	<script language="javascript" type="text/javascript" src="/static/jqplot/plugins/jqplot.canvasTextRenderer.js"></script>
	<script language="javascript" type="text/javascript" src="/static/jqplot/plugins/jqplot.canvasAxisTickRenderer.js"></script>
	<script language="javascript" type="text/javascript" src="/static/jqplot/plugins/jqplot.canvasAxisLabelRenderer.js"></script>
	</tal:block>


    <div metal:fill-slot="content">
    <style>
    td{
    height:50px;
    }
    </style>
    
    <p style="float: right;"><a href="/server/${server_dict['Name']}/edit">Edit</a></p>
		<table class="styled-table" style="width:600px">
			<tr>
			<td colspan="2">
			Server Status: <input type="checkbox" id="checkTwo" disabled="true"/>
			</td>
			</tr>
			<tr>
		    <td colspan="2">
		      Server Operation state: ${server_dict["OpState"]}
		    </td>
		    </tr>
		
			<tr tal:repeat="outletVar outlets">
		      <td>
		      ${outlets[outletVar]["name"]} Status: <input type="checkbox" id="check_${outletVar}"/><div id="status_${outletVar}" style="float : right"><img src="/static/ajax/ajax-smallloader.gif"/></div>
		      </td>
		      <td>
		      Operation state: ${outlets[outletVar]["OpState"]}
		      </td>
		    </tr>
		</table>
		
		<script language="javascript" type="text/javascript" tal:repeat="plotVar plotTitle">
		$(document).ready(function(){
			  var line1=${structure: plotsData[repeat.plotVar.number-1]};
			  //var line1=[['22:35:30', 1342726530.2], ['23:35:20', 1342726520.05]];
			  var plot1 = $.jqplot('PlotNumber${repeat.plotVar.number}', [line1], {
			      title:'${plotVar}',
			      series:[{showMarker:false,
			    	  lineWidth: 1}],
			      
		          axesDefaults: {
		              labelRenderer: $.jqplot.CanvasAxisLabelRenderer
		            },			    	  
			      axes:{
			        xaxis:{
			          renderer:$.jqplot.DateAxisRenderer,
			          tickInterval:'10 minutes', //number of millisecons in an hour
			           //ticks: [['00:00','00:00'],['00:30','00:30'], ['01:00','01:00']],
			           //min: '2012-07-20 23:00',
			           //max: '2012-07-21 01:00',
			           min: '${structure: minTick[repeat.plotVar.number-1]}',
			           max: '${structure: maxTick[repeat.plotVar.number-1]}',
			          tickRenderer:$.jqplot.CanvasAxisTickRenderer,
			          tickOptions:{
			        	  	formatString:'%H:%M %d/%m',
				            showTicks: true,
				            show: true,
				            angle: -40
			          },
			          label: "${plotXLabel}"
			        },
			        yaxis:{
			        	tickRenderer:$.jqplot.CanvasAxisTickRenderer,
			        	label: "${plotYLabel[repeat.plotVar.number-1]}",
			        	tickOptions:{
			        		formatString: "${plotYFormat[repeat.plotVar.number-1]}"
			        	}
			        }
			      },
			      highlighter: {
			        show: true,
			      },
			      cursor: {
			        show: true,
			        zoom: true,
			        clickReset: false
			      }
			  });
			 });
		
		</script>
		
		<table>
				<tr tal:repeat="serverVar plotTitle">
		   		<td>
		   		<div id="PlotNumber${repeat.serverVar.number}" style="height:400px; width:600px;"></div>
		   		</td>
		   		</tr>
		</table>
		
		<table>
		<tr><td>
		<p>Server data that would go in to a nice table:</p>
		</td></tr>
		<tr tal:repeat="serverVar server_dict">
		<td tal:content="repeat.serverVar.number"></td>
		   <td><p tal:replace="serverVar"></p></td>
		      <td><p tal:replace="server_dict[serverVar]"></p></td>
		   </tr>
		</table>
		${server_dict['outlets']}
   </div>	
   
</tal:block>