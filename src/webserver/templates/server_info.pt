<div metal:use-macro="layout">
	<div metal:fill-slot="head_content">
	<script src="http://ajax.googleapis.com/ajax/libs/jquery/1.4.2/jquery.js" type="text/javascript"></script>


	<meta http-equiv="content-type" content="text/html;charset=UTF-8" />
	<style type="text/css">
	.iCheckbox_container {
		height:27px;
		width:94px;
		position: relative;
		overflow: hidden;
	}
	.iCheckbox_switch {
		height:27px;
		width:94px;
		background-image:url(/static/iPhoneCheckbox/images/iphone_switch.png); /* your actual slider image */
		background-repeat:none;
		background-position:0px;
	}
	.iCheckbox_checkbox { /* this is kinda moot since it gets hidden, but here to let you know it exists */
	}
	.iCheckbox_two_container {
		height:27px;
		width:94px;
		position: relative;
		overflow: hidden;
	}
	.iCheckbox_two_switch {
		height:27px;
		width:94px;
		background-image:url(/static/iPhoneCheckbox/images/iphone_switch.png); /* your actual slider image */
		background-repeat:none;
		background-position:0px;
	}
	.iCheckbox_two_checkbox { /* this is kinda moot since it gets hidden, but here to let you know it exists */
	}
	/*
	* below are styles to just pretty up the demo page... they have nothing to do with iCheckbox.
	*/
	.body_conts{
		width:800px;
		margin:0px;
		margin-left:auto;
		margin-right:auto;
		font-family:Arial, Helvetica, sans-serif;
		font-size:12px;
	}
	.magic_pink {
		background-color: #FF00FF;
		padding: 5px;
		margin:0px;
	}
	</style>
	
	
	<script src="/static/iPhoneCheckbox/jquery.iphone-switch.js" type="text/javascript"></script>

	<script src="/static/iPhoneCheckbox/jquery.iCheckbox.js" type="text/javascript"></script>
	<script type="text/javascript">
	// mimic console log for IE - must be careful what to log
	if ( typeof(console) == 'undefined' ) {
		var console = {};
	}
	if ( typeof(console.log) !== 'function' ) {
		console['log'] = function ( msg ) {
			alert(msg);
		}
	}

	// init the checkboxes at dom ready
	$(document).ready( function () {
		/*
		* first example - defaults
		*/
		$('#checkOne').iCheckbox();
		$('#checkOne').change(function(e){
			if ( $('#checkOne').attr('checked') == true ) {
				console.log('checkbox one checked: '+$(e.target).attr('checked'));
			}
		});
		/*
		* second example - custom
		*/
		var checkTwoOpts = {
			switch_container_src: '/static/iPhoneCheckbox/images/iphone_switch_container.gif',
			class_container: 'iCheckbox_two_container',
			class_switch: 'iCheckbox_two_switch',
			class_checkbox: 'iCheckbox_two_checkbox',
			switch_speed: 200,
			switch_swing: -53,
			checkbox_hide: false
			};
		var initial_state = "${server_dict['Switch']}";
		$('#checkTwo').iCheckbox(initial_state, checkTwoOpts );
		$('#checkTwo').change(function(e){
			if ( $('#checkOne').attr('checked') == true ) {
				console.log('checkbox two checked: '+$(e.target).attr('checked'));
			}
		});
	});
	</script>
	</div>


    <div metal:fill-slot="content">
        <p>Server data that would go in to a nice table:</p>
          ${server_dict["OpState"][0]}
		<table>
		<tr tal:repeat="serverVar server_dict">
		<td tal:content="repeat.serverVar.number"></td>
		   <td><p tal:replace="serverVar"></p></td>
		      <td><p tal:replace="server_dict[serverVar]"></p></td>
		   </tr>
	<tr>
      <td>
      Status: <input type="checkbox" id="checkTwo" disabled="true"/>
      </td>
    </tr>
		</table>
		
   </div>

	${ServerLog}
   
   
   
</div>